$(document).ready(function () {
  let formConfig = [];
 
  // load data
  $.getJSON("../plugin/data.json", function (data) {
    formConfig = data;
    buildForm(); 
  }).fail(function () {
    console.error("Failed to load JSON file");
  });
 
  let $form = $("#ecommerceForm");
 
  function createDiv(type = "smart-input") {
    return $("<div>").addClass(type);
  }
 
  function createFields(field) {
    return $("<label>")
      .attr("for", field.id)
      .text(field.title + (field.mandatory ? " *" : ""));
  }
 
  function commonAttributes($input, field) {
    $input.attr("id", field.id);
    if (!field.enable) $input.prop("disabled", true);
    if (field.mandatory) $input.prop("required", true);
    return $input;
  }
 
  function createFormField(field) {
    let $div, $input, $label;
 
    switch (field.inputType) {
      case "select":
        $div = createDiv();
        $input = $("<select>").addClass("peer");
        $input.append(
          $("<option>").val("").text("Select ").prop("selected", true).prop("disabled", true).prop("hidden", true)
        );
        $.each(field.options, (_, opt) => {
          $input.append($("<option>").val(opt.value).text(opt.text));
        });
        $label = createFields(field);
        $div.append($input).append($label);
        break;
 
      case "textarea":
        $div = createDiv();
        $input = $("<textarea>").addClass("peer").attr("placeholder", " ");
        $label = createFields(field);
        $div.append($input).append($label);
        break;
 
      case "checkbox":
        $div = createDiv("flex items-center space-x-2");
        $input = $("<input>").attr("type", "checkbox").addClass("w-5 h-5");
        $label = createFields(field).removeClass().addClass("text-gray-700 font-medium");
        $div.append($input).append($label);
        break;
 
      case "text":
      case "tel":
      case "password":
        $div = createDiv();
        $input = $("<input>").attr("type", field.inputType).addClass("peer").attr("placeholder", " ");
        if (field.charLength) $input.attr("maxlength", field.charLength);
        $label = createFields(field);
        $div.append($input).append($label);
        break;
 
      default:
        console.warn("Unknown input type:", field.inputType);
        return;
    }
 
    $input = commonAttributes($input, field);
    $form.find("button[type=submit]").before($div);
  }
 
  function buildForm() {
    $.each(formConfig, (_, field) => createFormField(field));
 
    $form.on("submit", function (e) {
      e.preventDefault();
 
      let formValues = {};
      let validAll = true;
 
      $.each(formConfig, (_, field) => {
        let $element = $("#" + field.id);
        let value = field.inputType === "checkbox" ? $element.prop("checked") : $element.val();
 
        if (field.mandatory && !value) {
          alert(field.title + " is required!");
          validAll = false;
          return false;
        }
 
        if (field.id == "phoneNum" && value) {
          if (!/^[0-9]+$/.test(value)) {
            alert("Please enter a valid 10-digit phone number.");
            validAll = false;
            return false;
          }
        }
 
        formValues[field.id] = value;
      });
 
      if (!validAll) return;
 
      if (formValues.password !== formValues.confirmPassword) {
        alert("Passwords do not match. Please try with the same password.");
        return;
      }
 
      console.log("Form Submitted:", formValues);
      alert("Form submitted successfully!");
    });
  }
});
