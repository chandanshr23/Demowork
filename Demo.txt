// ================== NOTYF + ALERT CONFIG ==================
const notyf = new Notyf({
  duration: 2500,
  position: { x: "right", y: "top" },
  types: [
    { type: "success", background: "#16a34a", icon: false },
    { type: "error", background: "#dc2626", icon: false },
    { type: "info", background: "#2563eb", icon: false },
  ],
});

function showConfirm(title, text, icon = "question", confirmText = "Yes") {
  return Swal.fire({
    title,
    text,
    icon,
    showCancelButton: true,
    confirmButtonColor: "#2563eb",
    cancelButtonColor: "#6b7280",
    confirmButtonText: confirmText,
  });
}

// ================== PAGE LOAD ==================
$(document).ready(function () {
  $("#navDashboard").click(() => {
    $("#dashboardSection").show();
    $("#userSection").hide();
    loadDashboard();
  });

  $("#navAdmins").click(() => showUserSection("ADMIN"));
  $("#navPanels").click(() => showUserSection("PANEL"));
  $("#navCandidates").click(() => showUserSection("CANDIDATE"));
  $("#logoutBtn").click(() => logoutUser());

  $("#dashboardSection").show();
  $("#userSection").hide();
  loadDashboard();
});

// ================== DASHBOARD ==================
let completionChartInstance = null;
let avgTimeChartInstance = null;

function loadDashboard() {
  ajaxPost(
    "adminDashboardData",
    {},
    function (res) {
      try {
        const cards = res?.cards || {};
        $("#cardCandidates").text(cards.candidates ?? "--");
        $("#cardPanels").text(cards.panels ?? "--");
        $("#cardTests").text(cards.tests ?? "--");
        $("#cardCompleted").text(cards.completed ?? "--");

        // Destroy previous charts
        if (completionChartInstance) completionChartInstance.destroy();
        if (avgTimeChartInstance) avgTimeChartInstance.destroy();

        // Completion Chart
        const compEl = document.getElementById("completionChart");
        if (compEl && res.completion?.labels) {
          completionChartInstance = new Chart(compEl, {
            type: "bar",
            data: {
              labels: res.completion.labels,
              datasets: [
                {
                  label: "Completion %",
                  data: res.completion.values || [],
                  backgroundColor: "rgba(59,130,246,0.7)",
                },
              ],
            },
            options: { responsive: true, maintainAspectRatio: false },
          });
        }

        // Avg Time Chart
        const avgEl = document.getElementById("avgTimeChart");
        if (avgEl && res.avgTime?.labels) {
          avgTimeChartInstance = new Chart(avgEl, {
            type: "line",
            data: {
              labels: res.avgTime.labels,
              datasets: [
                {
                  label: "Avg Time (mins)",
                  data: res.avgTime.values || [],
                  borderColor: "rgba(16,185,129,0.8)",
                  fill: false,
                  tension: 0.3,
                },
              ],
            },
            options: { responsive: true, maintainAspectRatio: false },
          });
        }

        // Recent Submissions Table
        const rows = (res.recent || [])
          .map(
            (r) => `
              <tr>
                <td class="px-3 py-2">${escapeHtml(r.candidate ?? "-")}</td>
                <td class="px-3 py-2">${escapeHtml(r.test ?? "-")}</td>
                <td class="px-3 py-2">${escapeHtml(r.status ?? "-")}</td>
                <td class="px-3 py-2">${escapeHtml(r.score ?? "-")}</td>
                <td class="px-3 py-2">${escapeHtml(r.timeTaken ?? "-")}</td>
              </tr>`
          )
          .join("");
        $("#recentBody").html(rows || `<tr><td colspan="5">No data</td></tr>`);
      } catch (e) {
        console.error("Error processing dashboard response:", e);
        notyf.error("Error loading dashboard");
      }
    },
    function () {
      notyf.error("Unable to fetch dashboard data");
      $("#cardCandidates,#cardPanels,#cardTests,#cardCompleted").text("--");
      $("#recentBody").html(
        `<tr><td colspan="5" class="text-center text-gray-500">Unable to load data</td></tr>`
      );
    }
  );
}

// ================== USERS SECTION ==================
function showUserSection(role) {
  $("#dashboardSection").hide();
  $("#userSection").show();
  $("#userSection").html(
    `<div class='text-center text-gray-500 py-10'>Loading ${role} data...</div>`
  );
  loadUserPage(role);
}

function loadUserPage(role) {
  let title = role.charAt(0) + role.slice(1).toLowerCase() + " Management";

  let html = `
    <div class="flex justify-between mb-4">
      <h2 class="text-2xl font-bold">${title}</h2>
      <button id="btnAddUser" class="bg-blue-600 text-white px-4 py-2 rounded">+ Add</button>
    </div>

    <div class="overflow-x-auto bg-white rounded shadow">
      <table id="userTable" class="display min-w-full">
        <thead><tr>
          <th>Username</th>
          <th>FullName</th>
          <th>Email</th>
          <th>Phone</th>
          ${role == "PANEL" ? "<th>Expertise</th>" : ""}
          <th>Actions</th>
        </tr></thead>
        <tbody id="userTableBody"></tbody>
      </table>
    </div>

    ${buildUserModal(role)}
  `;
  $("#userSection").html(html);
  loadUsers(role);
  bindUserActions(role);
}

function buildUserModal(role) {
  return `
    <div id="userModal" class="hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center">
      <div class="bg-white w-96 p-6 rounded shadow-lg">
        <h3 class="text-lg font-semibold mb-3">Add User</h3>
        <form id="userForm" class="space-y-3">
          <input type="text" id="username" placeholder="Username" class="w-full border rounded p-2" required>
          <input type="text" id="fullName" placeholder="Full Name" class="w-full border rounded p-2" required>
          <input type="email" id="email" placeholder="Email" class="w-full border rounded p-2" required>
          <input type="password" id="password" placeholder="Password" class="w-full border rounded p-2" required>
          <input type="tel" id="phone" placeholder="Phone Number" class="w-full border rounded p-2" required>
          ${
            role == "PANEL"
              ? `<label class="text-sm">Expertise</label>
                <select id="expertise" multiple class="w-full border rounded p-2 h-24">
                  <option value="Java">Java</option>
                  <option value="Python">Python</option>
                  <option value="C++">C++</option>
                  <option value="Spring Boot">Spring Boot</option>
                  <option value="Database (SQL)">Database (SQL)</option>
                </select>`
              : ""
          }
          <div class="flex justify-end gap-2">
            <button type="button" id="cancelModal" class="bg-gray-300 px-4 py-2 rounded">Cancel</button>
            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Save</button>
          </div>
        </form>
      </div>
    </div>`;
}

function loadUsers(role) {
  ajaxPost("getAllUsersByRole", { role: role }, function (res) {
    if (res.status === "success" && res.users?.length > 0) {
      if ($.fn.DataTable.isDataTable("#userTable")) {
        $("#userTable").DataTable().destroy();
      }

      let rows = res.users.map((u) => buildTableRow(u, role)).join("");
      $("#userTableBody").html(rows);

      $("#userTable").DataTable({
        paging: true,
        searching: true,
        info: true,
        responsive: true,
        ordering: true,
      });
    } else {
      $("#userTableBody").html(
        `<tr><td colspan="6" class="text-center">No users found</td></tr>`
      );
    }
  });
}

function bindUserActions(role) {
  $("#btnAddUser").click(() => toggleModal("userModal", true));
  $("#cancelModal").click(() => toggleModal("userModal", false));

  $("#userForm").submit(function (e) {
    e.preventDefault();
    const expertise = $("#expertise").val();
    ajaxPost(
      "addUser",
      {
        role,
        full_name: $("#fullName").val(),
        username: $("#username").val(),
        email: $("#email").val(),
        password: $("#password").val(),
        phone: $("#phone").val(),
        expertise: (expertise || []).join(","),
      },
      function (res) {
        notyf.success(res.message || "User added");
        if (res.status === "success") {
          toggleModal("userModal", false);
          loadUsers(role);
        }
      }
    );
  });

  $(document).on("click", ".deleteUser", function () {
    const id = $(this).data("id");
    showConfirm("Delete User?", "This action cannot be undone.", "warning", "Delete")
      .then((r) => {
        if (r.isConfirmed) {
          ajaxPost("deleteUser", { userId: id }, function (res) {
            notyf.success(res.message || "Deleted successfully");
            loadUsers(role);
          });
        }
      });
  });
}

// ================== LOGOUT ==================
function logoutUser() {
  showConfirm("Logout?", "Are you sure you want to logout?", "question", "Logout")
    .then((result) => {
      if (result.isConfirmed) {
        notyf.open({ type: "info", message: "Logging out..." });
        ajaxPost("logout", {}, function (res) {
          if (res.status === "success") {
            notyf.success(res.message);
            sessionStorage.clear();
            setTimeout(() => (window.location.href = "index.html"), 800);
          } else {
            notyf.error(res.message || "Logout failed");
          }
        });
      }
    });
}
