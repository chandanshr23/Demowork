$(document).ready(function () {
  $("#navDashboard").click(() => {
    $("#dashboardSection").show();
    $("#userSection").hide();
    loadDashboard();
  });
  $("#navAdmins").click(() => showUserSection("ADMIN"));
  $("#navPanels").click(() => showUserSection("PANEL"));
  $("#navCandidates").click(() => showUserSection("CANDIDATE"));
  $("#logoutBtn").click(() => logoutUser());

  $("#dashboardSection").show();
  $("#userSection").hide();
  loadDashboard();
});
function showUserSection(role) {
  $("#dashboardSection").hide();
  $("#userSection").show();
  $("#userSection").html(
    `<div class='text-center text-gray-500 py-10'>Loading ${role} data...</div>`
  );
  loadUserPage(role);
}

let completionChartInstance = null;
let avgTimeChartInstance = null;

function loadDashboard() {
  ajaxPost(
    "adminDashboardData",
    {},
    function (res) {
      try {
        const cards = res && res.cards ? res.cards : {};
        $("#cardCandidates").text(cards.candidates ?? "--");
        $("#cardPanels").text(cards.panels ?? "--");
        $("#cardTests").text(cards.tests ?? "--");
        $("#cardCompleted").text(cards.completed ?? "--");

        // Charts
        if (completionChartInstance) {
          completionChartInstance.destroy();
          completionChartInstance = null;
        }
        if (avgTimeChartInstance) {
          avgTimeChartInstance.destroy();
          avgTimeChartInstance = null;
        }

        // completion chart
        const compEl = document.getElementById("completionChart");
        if (compEl && res.completion && Array.isArray(res.completion.labels)) {
          completionChartInstance = new Chart(compEl, {
            type: "bar",
            data: {
              labels: res.completion.labels,
              datasets: [
                {
                  label: "Completion %",
                  data: res.completion.values || [],
                  backgroundColor: "rgba(59,130,246,0.7)",
                },
              ],
            },
            options: { responsive: true, maintainAspectRatio: false },
          });
        }

        const avgEl = document.getElementById("avgTimeChart");
        if (avgEl && res.avgTime && Array.isArray(res.avgTime.labels)) {
          avgTimeChartInstance = new Chart(avgEl, {
            type: "line",
            data: {
              labels: res.avgTime.labels,
              datasets: [
                {
                  label: "Avg Time (mins)",
                  data: res.avgTime.values || [],
                  borderColor: "rgba(16,185,129,0.8)",
                  fill: false,
                  tension: 0.3,
                },
              ],
            },
            options: { responsive: true, maintainAspectRatio: false },
          });
        }

        // recent submissions table
        const recent = Array.isArray(res.recent) ? res.recent : [];
        const rows = recent
          .map(
            (r) => `
        <tr>
          <td class="px-3 py-2">${escapeHtml(r.candidate ?? "-")}</td>
          <td class="px-3 py-2">${escapeHtml(r.test ?? "-")}</td>
          <td class="px-3 py-2">${escapeHtml(r.status ?? "-")}</td>
          <td class="px-3 py-2">${escapeHtml(r.score ?? "-")}</td>
          <td class="px-3 py-2">${escapeHtml(r.timeTaken ?? "-")}</td>
        </tr>
      `
          )
          .join("");
        $("#recentBody").html(rows);
      } catch (e) {
        console.error("Error processing dashboard response:", e);
      }
    },
    function (request, textStatus, errorThrown) {
      console.error(
        request.statusText == "Dashboard AJAX error:",
        textStatus,
        errorThrown
      );
      $("#cardCandidates,#cardPanels,#cardTests,#cardCompleted").text("--");
      $("#recentBody").html(
        `<tr><td colspan="5" class="text-center text-gray-500">Unable to load data</td></tr>`
      );
    }
  );
}

function loadUserPage(role) {
  let title = role.charAt(0) + role.slice(1).toLowerCase() + " Management";

  let html = `
    <div class="flex justify-between mb-4">
      <h2 class="text-2xl font-bold">${title}</h2>
      <button id="btnAddUser" class="bg-blue-600 text-white px-4 py-2 rounded">+ Add</button>
    </div>

    <div class="overflow-x-auto bg-white rounded shadow">
      <table id="userTable" class="display min-w-full">
        <thead><tr>
          <th>Username</th>
          <th>FullName</th>
          <th>Email</th>
          <th>Phone Number</th>
         
          ${role == "PANEL" ? "<th>Expertise</th>" : ""}
          <th>Actions</th>
        </tr></thead>
        <tbody id="userTableBody"></tbody>
      </table>
    </div>

    ${buildUserModal(role)}
  `;
  $("#userSection").html(html);
  loadUsers(role);
  bindUserActions(role);
}

function buildUserModal(role) {
  return `
    <div id="userModal" class="hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center">
      <div class="bg-white w-96 p-6 rounded shadow-lg">
        <h3 class="text-lg font-semibold mb-3">Add User</h3>
        <form id="userForm" class="space-y-3">
          <input type="text" id="username" placeholder="Username" class="w-full border rounded p-2" required>
          <input type="text" id="fullName" placeholder="FullName" class="w-full border rounded p-2" required>
          <input type="email" id="email" placeholder="Email" class="w-full border rounded p-2" required>
          <input type="password" id="password" placeholder="Password" class="w-full border rounded p-2" required>
          <input type="tel" id="phone" placeholder="Phone Number" class="w-full border rounded p-2"required>
            ${
              role == "PANEL"
                ? `
              <label class="block text-sm font-medium text-gray-700">Select Expertise (multiple)</label>
              <select id="expertise" multiple class="w-full border rounded p-2 h-28 focus:ring-2 focus:ring-blue-500">
                <option value="Java">Java</option>
                <option value="Python">Python</option>
                <option value="C++">C++</option>
                <option value="ReactJS">ReactJS</option>
                <option value="Spring Boot">Spring Boot</option>
                <option value="Database (SQL)">Database (SQL)</option>
                <option value="DevOps">DevOps</option>
              </select>
              <p class="text-xs text-gray-500">Hold Ctrl to select multiple</p>
              `
                : ""
            }
          <div class="flex justify-end gap-2">
            <button type="button" id="cancelModal" class="bg-gray-300 px-4 py-2 rounded">Cancel</button>
            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Save</button>
          </div>
        </form>
      </div>
    </div>
  `;
}
function loadUsers(role) {
  ajaxPost("getAllUsersByRole", { role: role }, function (res) {
    if (res.status == "success" && res.users && res.users.length > 0) {
      // Destroy
      if ($.fn.DataTable.isDataTable("#userTable")) {
        $("#userTable").DataTable().destroy();
      }

      let rows = "";
      // Build rows
      res.users.forEach((u) => {
        rows += buildTableRow(u, role);
      });
      $("#userTableBody").html(rows);

      $("#userTable").DataTable({
        paging: true,
        searching: true,
        info: true,
        responsive: true,
        ordering: true,
      });
    } else {
      $("#userTableBody").html(
        `<tr><td colspan="6" class="text-center">No users found</td></tr>`
      );
    }
  });
}

function bindUserActions(role) {
  $("#btnAddUser").click(() => toggleModal("userModal", true));
  $("#cancelModal").click(() => toggleModal("userModal", false));

  $("#userForm").submit(function (e) {
    e.preventDefault();
    const expertise = $("#expertise").val();
    ajaxPost(
      "addUser",
      {
        role: role,
        full_name: $("#fullName").val(),
        username: $("#username").val(),
        email: $("#email").val(),
        password: $("#password").val(),
        phone: $("#phone").val(),
        expertise: (expertise || []).join(","),
      },
      function (res) {
        alert(res.message);
        if (res.status == "success") {
          toggleModal("userModal", false);
          loadUsers(role);
        }
      }
    );
  });
  $(document).on("click", "#cancelEditModal", function () {
    toggleModal("editUserModal", false);
  });
  // Assign Panel
  $(document).on("click", ".assignPanel", function () {
    const candidateId = $(this).data("id");
    $("#assignCandidateId").val(candidateId);
    $("#assignPanelSelect").html("<option>Loading...</option>");
    toggleModal("assignPanelModal", true);

    // Fetch all panels
    ajaxPost("getAllUsersByRole", { role: "PANEL" }, function (res) {
      if (res.status == "success" && Array.isArray(res.users)) {
        const options = res.users
          .map(
            (u) =>
              `<option value="${u.user_id}">${u.full_name} (${
                u.expertise || "-"
              })</option>`
          )
          .join("");
        $("#assignPanelSelect").html(options);
      } else {
        $("#assignPanelSelect").html(
          "<option disabled>No panels available</option>"
        );
      }
    });
  });

  // Cancel modal
  $("#assignCancel").click(() => toggleModal("assignPanelModal", false));

  // Save panel assignment
  $("#assignSave").click(() => {
    const candidateId = $("#assignCandidateId").val();
    const panelId = $("#assignPanelSelect").val();

    if (!panelId) return alert("Please select a panel member!");

    ajaxPost("assignPanel", { candidateId, panelId }, function (res) {
      alert(res.message);
      if (res.status == "success") {
        toggleModal("assignPanelModal", false);
        loadUsers("CANDIDATE");
      }
    });
  });
  $(document).on("click", ".editUser", function () {
    const userId = $(this).data("id");

    ajaxPost("getUserById", { user_id: userId }, function (res) {
      if (res.status == "success" && res.user) {
        const user = res.user;

        $("#editUserId").val(user.user_id);
        $("#editFullName").val(user.full_name);
        $("#editEmail").val(user.email);
        $("#editPhone").val(user.phone_no);
        $("#editExpertise").val(user.expertise || "");
        $("#editStatus").prop(
          "checked",
          user.status == true || user.status == "true"
        );

        if (user.role == "PANEL") $("#editExpertiseBlock").show();
        else $("#editExpertiseBlock").hide();

        toggleModal("editUserModal", true);
      } else {
        alert("Unable to fetch user details");
      }
    });
  });

  $(document).on("click", ".deleteUser", function () {
    if (confirm("Delete this user?")) {
      ajaxPost("deleteUser", { userId: $(this).data("id") }, function (res) {
        alert(res.message);
        loadUsers(role);
      });
    }
  });
}
//Logout
function logoutUser() {
  Swal.fire({
    title: "Logout?",
    text: "Are you sure?",
    icon: "question",
    showCancelButton: true,
    confirmButtonColor: "#2563eb",
    confirmButtonText: "Logout",
  }).then(function(result) {
    if (result.isConfirmed) {
      notyf.info("Logging out...");
      sessionStorage.clear();
      setTimeout(function() {
        window.location.href = "index.html";
      }, 800);
    }
  });
}
