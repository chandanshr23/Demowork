$(document).ready(function () {
  let formConfig = [];

  // Load patient data
  $.getJSON("../json/patient.json", function (data) {
    formConfig = data;
    buildForm();
  }).fail(function () {
    console.error("Failed to load patient.json");
  });

  let $form = $("#patientForm");

  function createDiv(type = "smart-input") {
    return $("<div>").addClass(type);
  }

  function createFields(field) {
    return $("<label>")
      .attr("for", field.id)
      .text(field.title + (field.mandatory ? " *" : ""));
  }

  function commonAttributes($input, field) {
    $input.attr("id", field.id);
    $input.attr("name", field.id);
    if (!field.enable) $input.prop("disabled", true);
    if (field.mandatory) $input.prop("required", true);
    return $input;
  }

  function createFormField(field) {
    let $div, $input, $label;

    try {
      switch (field.inputType) {
        case "select":
          $div = createDiv();
          $input = $("<select>").addClass("peer");
          $input.append(
            $("<option>")
              .val("")
              .text("Select " + field.title)
              .prop("selected", true)
              .prop("disabled", true)
          );
          $.each(field.options || [], (_, opt) => {
            $input.append($("<option>").val(opt.value).text(opt.text));
          });
          $label = createFields(field);
          $div.append($input).append($label);
          break;

        case "textarea":
          $div = createDiv();
          $input = $("<textarea>").addClass("peer").attr("placeholder", " ");
          $label = createFields(field);
          $div.append($input).append($label);
          break;

        case "checkbox":
          $div = createDiv("flex items-center space-x-2");
          $input = $("<input>").attr("type", "checkbox").addClass("w-5 h-5");
          $label = createFields(field)
            .removeClass()
            .addClass("text-gray-700 font-medium");
          $div.append($input).append($label);
          break;

        case "date":
        case "text":
        case "tel":
        case "number":
          $div = createDiv();
          $input = $("<input>")
            .attr("type", field.inputType)
            .addClass("peer")
            .attr("placeholder", " ");
          if (field.charLength) $input.attr("maxlength", field.charLength);
          if (field.inputType == "number") $input.attr("step", "any");
          $label = createFields(field);
          $div.append($input).append($label);
          break;

        default:
          console.warn("Unknown input type:", field.inputType);
          return;
      }

      $input = commonAttributes($input, field);

      // Append field to form (previous code tried to insert before a non-existing submit button)
      $form.append($div);
    } catch (err) {
      console.error("Error creating field:", field, err);
    }
  }

  function buildForm() {
    $form.empty();

    $.each(formConfig, (_, field) => createFormField(field));

    // Add form actions (submit & reset)
    const $actions = $(
      '<div class="pt-2 flex items-center gap-3">' +
        '<button type="submit" class="px-5 py-2.5 rounded-xl bg-indigo-600 text-white hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500">Submit</button>' +
        '<button type="button" id="resetBtn" class="px-5 py-2.5 rounded-xl border hover:bg-gray-50">Reset</button>' +
      "</div>"
    );
    $form.append($actions);

    $form.on("submit", function (e) {
      e.preventDefault();

      let formValues = {};
      let validAll = true;

      try {
        $.each(formConfig, (_, field) => {
          let $element = $("#" + field.id);
          let value =
            field.inputType == "checkbox"
              ? $element.prop("checked")
              : ($element.val() == null ? "" : $element.val().toString().trim());

          // == Validations ==
          if (field.mandatory) {
            // For checkboxes, value is boolean
            const empty = field.inputType == "checkbox" ? !value : value == "";
            if (empty) {
              alert(field.title + " is required!");
              validAll = false;
              return false; // break out
            }
          }

          if (field.id == "phone" && value) {
            // use charLength if provided
            const len = field.charLength || 10;
            const re = new RegExp("^\\d{" + len + "}$");
            if (!re.test(value)) {
              alert("Please enter a valid " + len + "-digit phone number.");
              validAll = false;
              return false;
            }
          }

          if (field.id == "birthDate" && value) {
            let today = new Date().toISOString().split("T")[0];
            if (value > today) {
              alert("Birth Date cannot be in the future.");
              validAll = false;
              return false;
            }
          }

          formValues[field.id] = value;
        });

        if (!validAll) return;

        console.log("Patient Form Submitted:", formValues);
        // show result area
        $("#result").text(JSON.stringify(formValues, null, 2));
        $("#resultWrap").removeClass("hidden");
        alert("Form submitted successfully!");
      } catch (err) {
        console.error(" Error on patient form submit:", err);
        alert("Something went wrong, please try again.");
      }
    });

    // Reset handler
    $form.on("click", "#resetBtn", function () {
      const formEl = $form[0];
      if (formEl) formEl.reset();
      $("#resultWrap").addClass("hidden");
      $("#result").text("");
    });
  }
});
